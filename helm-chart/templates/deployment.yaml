apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-chart.fullname" . }}
  labels:
    {{- include "helm-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      {{- include "helm-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "helm-chart.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo "waiting for postgres"; sleep 2; done;']
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          command: ["sh", "-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: DB_HOST
              value: "postgres-service"
            - name: DB_NAME
              value: "postgres"
            - name: DB_USER
              value: "postgres"
            - name: DB_PASS
              value: "postgres"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}